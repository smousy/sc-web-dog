export declare class ScType {
    private _value;
    constructor(value?: number);
    get value(): number;
    hasConstancy(): boolean;
    hasDirection(): boolean;
    isNode(): boolean;
    isEdge(): boolean;
    isLink(): boolean;
    isConst(): boolean;
    isVar(): boolean;
    isPos(): boolean;
    isNeg(): boolean;
    isFuz(): boolean;
    isPerm(): boolean;
    isTemp(): boolean;
    isAccess(): boolean;
    isTuple(): boolean;
    isStruct(): boolean;
    isRole(): boolean;
    isNoRole(): boolean;
    isClass(): boolean;
    isAbstract(): boolean;
    isMaterial(): boolean;
    isValid(): boolean;
    equal(other: ScType): boolean;
    merge(other: ScType): ScType;
    changeConst(isConst: boolean): ScType;
    static readonly EdgeUCommon: ScType;
    static readonly EdgeDCommon: ScType;
    static readonly EdgeUCommonConst: ScType;
    static readonly EdgeDCommonConst: ScType;
    static readonly EdgeUCommonVar: ScType;
    static readonly EdgeDCommonVar: ScType;
    static readonly EdgeAccess: ScType;
    static readonly EdgeAccessConstPosPerm: ScType;
    static readonly EdgeAccessConstNegPerm: ScType;
    static readonly EdgeAccessConstFuzPerm: ScType;
    static readonly EdgeAccessConstPosTemp: ScType;
    static readonly EdgeAccessConstNegTemp: ScType;
    static readonly EdgeAccessConstFuzTemp: ScType;
    static readonly EdgeAccessVarPosPerm: ScType;
    static readonly EdgeAccessVarNegPerm: ScType;
    static readonly EdgeAccessVarFuzPerm: ScType;
    static readonly EdgeAccessVarPosTemp: ScType;
    static readonly EdgeAccessVarNegTemp: ScType;
    static readonly EdgeAccessVarFuzTemp: ScType;
    static readonly Const: ScType;
    static readonly Var: ScType;
    static readonly Node: ScType;
    static readonly Link: ScType;
    static readonly Unknown: ScType;
    static readonly NodeConst: ScType;
    static readonly NodeVar: ScType;
    static readonly LinkConst: ScType;
    static readonly LinkVar: ScType;
    static readonly NodeStruct: ScType;
    static readonly NodeTuple: ScType;
    static readonly NodeRole: ScType;
    static readonly NodeNoRole: ScType;
    static readonly NodeClass: ScType;
    static readonly NodeAbstract: ScType;
    static readonly NodeMaterial: ScType;
    static readonly NodeConstStruct: ScType;
    static readonly NodeConstTuple: ScType;
    static readonly NodeConstRole: ScType;
    static readonly NodeConstNoRole: ScType;
    static readonly NodeConstClass: ScType;
    static readonly NodeConstAbstract: ScType;
    static readonly NodeConstMaterial: ScType;
    static readonly NodeVarStruct: ScType;
    static readonly NodeVarTuple: ScType;
    static readonly NodeVarRole: ScType;
    static readonly NodeVarNoRole: ScType;
    static readonly NodeVarClass: ScType;
    static readonly NodeVarAbstract: ScType;
    static readonly NodeVarMaterial: ScType;
}
